INFO:root:
Started
INFO:root:Image #0

INFO:root:Feature Extraction Layer

INFO:root:
Input x dimensions before crelu: [1, channels, height, width] = torch.Size([1, 3, 192, 192])

INFO:root:
x1 dimensions after crelu base: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
f4 dimensions after crelu residual1: [1, channels, height, width] = torch.Size([1, 64, 48, 48])

INFO:root:
f3 dimensions after crelu residual2: [1, channels, height, width] = torch.Size([1, 128, 24, 24])

INFO:root:
f2 dimensions after inception residual1: [1, channels, height, width] = torch.Size([1, 256, 12, 12])

INFO:root:
f1 dimensions after inception residual2: [1, channels, height, width] = torch.Size([1, 384, 6, 6])

INFO:root:Feature Merging Layer

INFO:root:
Input h1 dimensions before first merge: [1, channels, height, width] = torch.Size([1, 384, 6, 6])

INFO:root:
h2 dimensions after first merge: [1, channels, height, width] = torch.Size([1, 128, 12, 12])

INFO:root:
h3 dimensions after second merge: [1, channels, height, width] = torch.Size([1, 64, 24, 24])

INFO:root:
h4 dimensions after third merge: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
h5 dimensions after final convolution: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:Output Layer

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
Score map dimensions: [1, channels, height, width] = torch.Size([1, 1, 48, 48])

INFO:root:Score map: tensor([[[[0.5767, 0.5441, 0.5636,  ..., 0.5109, 0.5017, 0.5584],
          [0.5342, 0.4922, 0.4635,  ..., 0.5374, 0.5894, 0.6188],
          [0.5229, 0.5692, 0.5565,  ..., 0.5935, 0.6438, 0.6233],
          ...,
          [0.5084, 0.5171, 0.5241,  ..., 0.5341, 0.6225, 0.4665],
          [0.5763, 0.5756, 0.6109,  ..., 0.5862, 0.5881, 0.4914],
          [0.5965, 0.5991, 0.6004,  ..., 0.6103, 0.6132, 0.5244]]]],
       grad_fn=<SigmoidBackward>)
INFO:root:
Geometry map dimensions: [1, channels, height, width] = torch.Size([1, 8, 48, 48])

INFO:root:Geometry map: tensor([[[[328.8863, 345.0745, 333.8836,  ..., 314.8616, 337.4774, 331.5240],
          [311.2525, 322.2873, 341.8143,  ..., 343.5934, 325.8932, 330.8923],
          [280.9363, 279.7852, 266.2031,  ..., 315.4257, 317.7025, 321.2002],
          ...,
          [326.0876, 290.5874, 306.5288,  ..., 329.5177, 354.0061, 320.1579],
          [316.8947, 302.6529, 322.8242,  ..., 340.7793, 375.9769, 336.7772],
          [339.4207, 322.2071, 343.1577,  ..., 301.6951, 321.3258, 357.1726]],

         [[221.2163, 241.9190, 234.9709,  ..., 225.8477, 233.3299, 227.0271],
          [238.2883, 285.5315, 268.3715,  ..., 258.0912, 273.0725, 267.5228],
          [218.3851, 239.0100, 205.6530,  ..., 254.6334, 269.0556, 266.2678],
          ...,
          [228.5675, 274.3262, 251.8191,  ..., 386.1213, 299.8530, 274.3318],
          [224.4941, 267.5877, 256.3076,  ..., 405.6141, 355.8148, 302.0322],
          [199.4128, 264.5436, 267.6017,  ..., 343.1688, 267.4778, 279.8591]],

         [[167.8909, 139.8079, 152.9255,  ..., 201.2753, 195.9793, 181.5876],
          [210.0942, 161.4718, 153.8232,  ..., 203.9175, 210.3313, 183.8695],
          [244.2143, 215.0363, 247.6210,  ..., 226.4859, 205.2997, 165.1349],
          ...,
          [190.3012, 208.3722, 213.7369,  ..., 154.3905, 164.1959, 203.7576],
          [174.5099, 181.9316, 203.9405,  ..., 138.5570, 163.2533, 179.5052],
          [155.0950, 150.8035, 171.4137,  ..., 123.8111, 147.1816, 169.7064]],

         ...,

         [[224.3663, 176.1193, 199.5531,  ..., 220.6558, 213.6041, 207.7539],
          [246.4882, 172.6001, 177.8214,  ..., 238.1555, 277.0681, 247.9769],
          [272.1645, 220.9068, 252.8563,  ..., 236.3295, 273.0056, 242.4384],
          ...,
          [218.4316, 203.3059, 208.4277,  ..., 182.6149, 178.2192, 205.3383],
          [219.3954, 200.0852, 196.2247,  ..., 153.4871, 176.5474, 205.7029],
          [222.6320, 210.3338, 209.8886,  ..., 167.4615, 204.5178, 150.4756]],

         [[276.6711, 233.7656, 259.9952,  ..., 275.6689, 278.8000, 269.8121],
          [243.9533, 200.7292, 228.4944,  ..., 275.3994, 260.0654, 238.1548],
          [237.9507, 208.7117, 257.4819,  ..., 297.7447, 268.7620, 240.7128],
          ...,
          [276.7103, 291.9241, 278.7729,  ..., 231.8131, 280.8394, 251.7722],
          [286.5439, 251.5336, 260.6890,  ..., 350.4857, 255.9368, 302.6699],
          [268.4462, 267.5185, 275.6042,  ..., 305.0208, 290.2095, 330.8105]],

         [[214.3654, 213.4219, 209.2788,  ..., 193.0255, 179.5546, 211.6887],
          [228.2871, 260.6756, 268.5604,  ..., 196.0681, 185.9942, 216.8972],
          [233.2368, 261.7689, 237.0998,  ..., 221.3702, 203.1022, 233.9335],
          ...,
          [169.4651, 222.2629, 232.3344,  ..., 255.2690, 224.5422, 221.5839],
          [175.3395, 209.2883, 236.2108,  ..., 193.4758, 253.4261, 208.9493],
          [200.2718, 217.0317, 206.8095,  ..., 229.3304, 238.0445, 154.1226]]]],
       grad_fn=<MulBackward0>)
INFO:root:-------------------------------------------------
INFO:root:Image #1

INFO:root:Feature Extraction Layer

INFO:root:
Input x dimensions before crelu: [1, channels, height, width] = torch.Size([1, 3, 192, 192])

INFO:root:
x1 dimensions after crelu base: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
f4 dimensions after crelu residual1: [1, channels, height, width] = torch.Size([1, 64, 48, 48])

INFO:root:
f3 dimensions after crelu residual2: [1, channels, height, width] = torch.Size([1, 128, 24, 24])

INFO:root:
f2 dimensions after inception residual1: [1, channels, height, width] = torch.Size([1, 256, 12, 12])

INFO:root:
f1 dimensions after inception residual2: [1, channels, height, width] = torch.Size([1, 384, 6, 6])

INFO:root:Feature Merging Layer

INFO:root:
Input h1 dimensions before first merge: [1, channels, height, width] = torch.Size([1, 384, 6, 6])

INFO:root:
h2 dimensions after first merge: [1, channels, height, width] = torch.Size([1, 128, 12, 12])

INFO:root:
h3 dimensions after second merge: [1, channels, height, width] = torch.Size([1, 64, 24, 24])

INFO:root:
h4 dimensions after third merge: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
h5 dimensions after final convolution: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:Output Layer

INFO:root:
Input h5 dimensions: [1, channels, height, width] = torch.Size([1, 32, 48, 48])

INFO:root:
Score map dimensions: [1, channels, height, width] = torch.Size([1, 1, 48, 48])

INFO:root:Score map: tensor([[[[0.4646, 0.3942, 0.5403,  ..., 0.3979, 0.3906, 0.4521],
          [0.4716, 0.4582, 0.4975,  ..., 0.4592, 0.4219, 0.4424],
          [0.4854, 0.4777, 0.5762,  ..., 0.4720, 0.4234, 0.4282],
          ...,
          [0.4498, 0.3660, 0.3703,  ..., 0.3644, 0.3803, 0.3849],
          [0.4514, 0.3842, 0.4045,  ..., 0.3858, 0.4034, 0.4071],
          [0.4410, 0.4092, 0.4303,  ..., 0.3771, 0.4067, 0.4138]]]],
       grad_fn=<SigmoidBackward>)
INFO:root:
Geometry map dimensions: [1, channels, height, width] = torch.Size([1, 8, 48, 48])

INFO:root:Geometry map: tensor([[[[231.2009, 289.5702, 236.5931,  ..., 255.9935, 249.4846, 248.1447],
          [247.4418, 304.9662, 256.5968,  ..., 232.4117, 239.7521, 268.9092],
          [271.2214, 277.0903, 234.4527,  ..., 241.8157, 274.5472, 312.5667],
          ...,
          [263.2170, 278.1903, 276.0203,  ..., 294.5988, 297.0932, 287.0591],
          [257.1893, 273.3102, 247.1888,  ..., 273.0713, 279.3700, 275.8081],
          [256.4261, 268.4102, 245.8891,  ..., 284.4902, 269.1174, 267.3177]],

         [[194.3196, 192.3115, 202.6790,  ..., 226.3073, 223.9755, 248.1022],
          [173.1710, 214.5357, 227.5538,  ..., 245.9361, 244.5212, 270.9391],
          [169.4327, 238.1160, 216.0189,  ..., 234.5093, 249.9861, 270.9793],
          ...,
          [226.2251, 266.6653, 200.4780,  ..., 227.6639, 221.7448, 234.8116],
          [228.0893, 234.4891, 189.1314,  ..., 242.8705, 235.5662, 250.5295],
          [221.0409, 251.8307, 206.1692,  ..., 233.6946, 243.8561, 249.8414]],

         [[250.3957, 271.2550, 225.2007,  ..., 259.6970, 247.5729, 241.3305],
          [242.5022, 269.2669, 214.7856,  ..., 259.5833, 263.5820, 240.9468],
          [237.7776, 266.0381, 194.5480,  ..., 249.5165, 250.1369, 219.3145],
          ...,
          [272.3988, 283.0821, 278.7430,  ..., 255.6406, 253.3562, 255.7550],
          [270.0171, 286.5276, 289.7658,  ..., 256.8815, 261.7002, 258.8434],
          [272.6281, 250.2865, 282.3961,  ..., 269.4508, 262.4790, 250.6402]],

         ...,

         [[252.1793, 241.4732, 282.1294,  ..., 253.6668, 241.5302, 289.1243],
          [253.5291, 225.4361, 265.4226,  ..., 276.3557, 248.9430, 289.6719],
          [242.6455, 230.4869, 266.0053,  ..., 287.7867, 256.9574, 287.3439],
          ...,
          [279.3061, 269.2921, 272.3049,  ..., 270.2483, 256.6165, 282.2078],
          [272.3625, 264.2490, 263.1233,  ..., 282.4530, 256.4428, 281.9240],
          [261.4107, 238.0374, 264.4646,  ..., 278.7315, 262.2226, 275.8146]],

         [[264.8118, 248.5379, 286.6562,  ..., 246.9257, 257.7973, 287.2553],
          [271.6133, 240.0758, 251.3337,  ..., 240.2378, 223.6996, 277.0719],
          [273.0697, 250.4940, 297.4181,  ..., 259.2964, 242.6348, 280.1439],
          ...,
          [229.4171, 243.3625, 238.6064,  ..., 218.1153, 236.1373, 244.9626],
          [249.7233, 232.7674, 249.4092,  ..., 221.3421, 235.4685, 246.7950],
          [251.9479, 229.3978, 239.5953,  ..., 214.4331, 237.2168, 245.5889]],

         [[203.6549, 206.5895, 220.1655,  ..., 264.6458, 265.3635, 301.3898],
          [203.2246, 196.6896, 267.8640,  ..., 266.1068, 250.7501, 307.8871],
          [206.5755, 220.8991, 226.5658,  ..., 242.8653, 247.3559, 301.7437],
          ...,
          [268.4075, 301.6099, 250.0992,  ..., 246.3903, 250.4436, 270.2257],
          [276.7984, 278.1743, 237.7812,  ..., 255.9875, 258.9363, 275.3976],
          [261.6152, 260.6252, 252.4604,  ..., 263.2054, 260.5674, 281.6544]]]],
       grad_fn=<MulBackward0>)
INFO:root:-------------------------------------------------
INFO:root:Finished

